/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testdba;

//import com.mysql.jdbc.ResultSetMetaData;
//import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Formatter;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CSX101
 */
public class userApp extends javax.swing.JFrame {

    PreparedStatement ps=null;
    ResultSet resultSet=null;
    static Connection conn=null;
    
    String affichage="Connexion succeded to database : ";
    
    Vector<String> queries;
    int querySelected=0;
    int rowIndex = 0;
    
    String db, name;
    
    DefaultTableModel defaultTableModel;
//    private long config;
    
    public userApp() {
    }

    
    
    public userApp(String db, String name) {
        initComponents();
        queries = new Vector();
        defaultTableModel = (DefaultTableModel) jTable1.getModel();
        
        this.setLocationRelativeTo(null);
        
        affichage+=db;
        affichage+="\nCurrent username : "+name+"\n\n";
        affichageTextArea.setText(affichage);
        
        this.db = db ; 
        this.name = name;
        
        this.timeLabel.setText("---");
        
//        if((name.equals("root")) ) jToggleButton.setEnabled(true);
//        else jToggleButton.setEnabled(false);
        
        AddQueriesInfo();
        
        jTable1.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row=jTable1.getSelectedRow();
                terminalTextArea.setText((String) defaultTableModel.getValueAt(row, 1));  
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        terminalTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jToggleButton = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        affichageTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        detailsjScrollPane = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mini SGBD - Application");
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        terminalTextArea.setBackground(new java.awt.Color(0, 0, 0));
        terminalTextArea.setColumns(20);
        terminalTextArea.setForeground(new java.awt.Color(0, 255, 0));
        terminalTextArea.setRows(5);
        terminalTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                terminalTextAreaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                terminalTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(terminalTextArea);

        jPanel2.setBackground(new java.awt.Color(185, 183, 189));
        jPanel2.setForeground(new java.awt.Color(91, 176, 186));

        jButton1.setBackground(new java.awt.Color(134, 139, 142));
        jButton1.setText("Submmit query");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Execution time : ");

        timeLabel.setForeground(new java.awt.Color(255, 0, 0));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png"))); // NOI18N
        jButton2.setToolTipText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jToggleButton.setBackground(new java.awt.Color(134, 139, 142));
        jToggleButton.setText("Optimizing : OFF");
        jToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(jToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jLabel1)
                        .addComponent(timeLabel)
                        .addComponent(jToggleButton)))
                .addGap(7, 7, 7))
        );

        affichageTextArea.setBackground(new java.awt.Color(8, 8, 8));
        affichageTextArea.setColumns(20);
        affichageTextArea.setForeground(new java.awt.Color(0, 255, 0));
        affichageTextArea.setRows(5);
        affichageTextArea.setCaretColor(new java.awt.Color(0, 255, 0));
        affichageTextArea.setDisabledTextColor(new java.awt.Color(8, 8, 8));
        affichageTextArea.setFocusable(false);
        jScrollPane2.setViewportView(affichageTextArea);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        jPanel5.setBackground(new java.awt.Color(228, 229, 232));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Queries you can use", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(51, 51, 51))); // NOI18N

        detailsjScrollPane.setBackground(new java.awt.Color(134, 139, 142));
        detailsjScrollPane.setForeground(new java.awt.Color(134, 139, 142));
        detailsjScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detailsjScrollPaneMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Query"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        detailsjScrollPane.setViewportView(jTable1);

        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Click on a row to upload it to your terminal !");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(0, 270, Short.MAX_VALUE))
            .addComponent(detailsjScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailsjScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String query=terminalTextArea.getText();
        try {
            if(query.toLowerCase().contains("select") || query.toLowerCase().contains("show")){
                ps = conn.prepareStatement(query);
                long beginConfig = System.currentTimeMillis();
                resultSet=ps.executeQuery(); 
                long endConfig = System.currentTimeMillis();
//                Optimize();
                float config = (float) ( (double)endConfig/Math.pow((double)10, (double)3)  - (double)beginConfig/ Math.pow((double)10, (double)3));
                Formatter  numberFormat = new Formatter();
                numberFormat.format("%.5f",config);
                this.timeLabel.setText( numberFormat +" s");
                
                JTable table = new JTable(buildTableModel(resultSet));
                TableDialog tableDialog = new TableDialog(this, rootPaneCheckingEnabled,table,query);
                tableDialog.setVisible(true);
            }else{
                ps = conn.prepareStatement(query);
                long begin = System.nanoTime();
                ps.execute();
                long end = System.nanoTime();
                this.timeLabel.setText( end- begin  +" ns");
                affichage+="\n"+terminalTextArea.getText()+"\n";
                affichage+="\t"+"Query succeded";
            }
            this.queries.add(query);
            querySelected++;
            terminalTextArea.setText("");
            
                
        } catch (SQLException ex) {
            Logger.getLogger(userApp.class.getName()).log(Level.SEVERE, null, ex);
            affichage+="\nERROR>"+ex.getMessage()+"\n";
        }

        affichageTextArea.setText(affichage);
     
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void Optimize(){
//        if(!jToggleButton.isSelected()) config+=4000000;
    }
    
    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {

        ResultSetMetaData metaData = (ResultSetMetaData) rs.getMetaData();

        // names of columns
            Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        widowsFrame fr = new widowsFrame();
        fr.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void terminalTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_terminalTextAreaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_terminalTextAreaKeyTyped

    private void terminalTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_terminalTextAreaKeyPressed
        // TODO add your handling code here:
        int keyCode = evt.getKeyCode();
        if(java.awt.event.KeyEvent.VK_UP == keyCode){
            if( queries.size()-1 > querySelected && querySelected >0)
                querySelected--;
            this.terminalTextArea.setText(queries.get(querySelected-1));
            System.out.println(""+queries.get(querySelected-1));
            
        }else if(java.awt.event.KeyEvent.VK_DOWN == keyCode){
            if( queries.size()-1 > querySelected && querySelected >0)
                querySelected++;
            this.terminalTextArea.setText(queries.get(querySelected-1));
            System.out.println(""+queries.get(querySelected-1));
        }
        
    }//GEN-LAST:event_terminalTextAreaKeyPressed

    private void detailsjScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsjScrollPaneMouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_detailsjScrollPaneMouseClicked

    private void jToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonActionPerformed
        // TODO add your handling code here:
        
        if(!jToggleButton.isSelected()){
            jToggleButton.setText("Optimazing : OFF");
            jToggleButton.setBackground(new Color(134,139,142));
            DesactifOptimization();
        }else{
            jToggleButton.setText("Optimazing : ON");   
            jToggleButton.setBackground(Color.BLUE);
            ActifOptimization();
        }
        
    }//GEN-LAST:event_jToggleButtonActionPerformed
    
    
    public void AddQueriesInfo(){
//        this.detailsjScrollPane.add(new JLabel("Queries you can use !6"));

        AddQueryToHelpTable("------------------------------------","---- Optimization Management----------------------------------------------");
        AddQueryToHelpTable("Check Optimizer","select @@global.optimizer_switch");
        AddQueryToHelpTable("","");
        AddQueryToHelpTable("","");

        AddQueryToHelpTable("------------------------------------","---- Users Management----------------------------------------------");
        AddQueryToHelpTable("Delete User","Drop user 'user'@'localhost'");
        AddQueryToHelpTable("Create User","Create user 'user'@'localhost' identified by 'password' ");
        AddQueryToHelpTable("Alter User","Alter user 'nom_user'@'localhost' IDENTIFIED BY 'NewPass';");
        AddQueryToHelpTable("","");
        AddQueryToHelpTable("","");
        AddQueryToHelpTable("------------------------------------","---- Privileges Management----------------------------------------------");
        AddQueryToHelpTable("Grant All Privileges","Grant All privileges on db.table to 'user'@'localhost'");
        AddQueryToHelpTable("Grant One Privilege","Grant insert, select, update, delete, create, drop on db_name.table_name to 'database_user'@'localhost'");
        AddQueryToHelpTable("Revoke All Privilege","delete from mysql.db where user='user_name' and host='localhost' ");
        AddQueryToHelpTable("Revoke One Privileges","update mysql.db set Name_priv='N' where user='user_name and host='localhost'");
        AddQueryToHelpTable("Show All Privileges","Show grants for 'database_user'@'localhost';");
        AddQueryToHelpTable("","");
        AddQueryToHelpTable("","");
        AddQueryToHelpTable("------------------------------------","---- Tables Management----------------------------------------------");
        AddQueryToHelpTable("Create Table","create table table_name (colonne TYPE)");
        AddQueryToHelpTable("Select","Select * from Table_Name");
        AddQueryToHelpTable("Insert","Insert into table(c1,c2,...) values (v1,v2,...)");
        AddQueryToHelpTable("Delete","Delete from table_name where condition");
        AddQueryToHelpTable("Update","Update table_name set c1=exp1 where condition");
        AddQueryToHelpTable("","");
        AddQueryToHelpTable("","");
        AddQueryToHelpTable("Testt Command","SELECT * FROM detail d,projet p WHERE d.id_projet = p.id");

    }
    
    
    public void AddQueryToHelpTable(String titre,String query){
       
        String data[]= {titre,query};
        defaultTableModel.addRow(data);
    }
    
    public void DesactifOptimization(){
        
        try {
            
            conn.close();
            conn = Connexion.connMysql("", "root", "");
            
            String query3 =" SET GLOBAL optimizer_switch='index_merge=off' ";
            String query4 =" SET GLOBAL optimizer_switch='index_merge_union=off'";
            String query5 =" SET GLOBAL optimizer_switch='index_merge_sort_union=off'";
            String query6 =" SET GLOBAL optimizer_switch='index_merge_intersection=off'";
            String query7 =" SET GLOBAL optimizer_switch='engine_condition_pushdown=off'";
            String query8 =" SET GLOBAL optimizer_switch='index_condition_pushdown=off'";
            String query9 =" SET GLOBAL optimizer_switch='mrr=off'";
            String query10 =" SET GLOBAL optimizer_switch='mrr_cost_based=off'";
            String query13 =" SET GLOBAL optimizer_switch='materialization=off'";
            String query14 =" SET GLOBAL optimizer_switch='semijoin=off'";
            String query15 =" SET GLOBAL optimizer_switch='loosescan=off'";
            String query16 =" SET GLOBAL optimizer_switch='firstmatch=off'";

            
            String query = "SET GLOBAL query_cache_size = 0";
            
          
            ps = conn.prepareStatement(query);
            ps.execute();
            ps.close();
         
            ps = conn.prepareStatement(query3);
            ps.execute();
            ps = conn.prepareStatement(query4);
            ps.execute();
            ps = conn.prepareStatement(query5);
            ps.execute();
            ps = conn.prepareStatement(query6);
            ps.execute();
            ps = conn.prepareStatement(query7);
            ps.execute();
            ps = conn.prepareStatement(query8);
            ps.execute();
            ps = conn.prepareStatement(query9);
            ps.execute();
            ps = conn.prepareStatement(query10);
            ps.execute();

            
            ps = conn.prepareStatement(query13);
            ps.execute();
            ps = conn.prepareStatement(query14);
            ps.execute();
            ps = conn.prepareStatement(query15);
            ps.execute();
            ps = conn.prepareStatement(query16);
            ps.execute();
            
        } catch (SQLException ex) {
            Logger.getLogger(userApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void ActifOptimization(){
        try {
            
            conn.close();
            conn = Connexion.connMysql("", "root", "");            
            String query = "Optimize Table donation.projet ";

            String query1 = "SET GLOBAL optimizer_switch='index_merge_sort_union=on'";
            
            String query3 =" SET GLOBAL optimizer_switch='index_merge=on' ";
            String query4 =" SET GLOBAL optimizer_switch='index_merge_union=on'";
            String query5 =" SET GLOBAL optimizer_switch='index_merge_sort_union=on'";
            String query6 =" SET GLOBAL optimizer_switch='index_merge_intersection=on'";
            String query7 =" SET GLOBAL optimizer_switch='engine_condition_pushdown=on'";
            String query8 =" SET GLOBAL optimizer_switch='index_condition_pushdown=on'";
            String query9 =" SET GLOBAL optimizer_switch='mrr=on'";
            String query10 =" SET GLOBAL optimizer_switch='mrr_cost_based=on'";
            String query13 =" SET GLOBAL optimizer_switch='materialization=on'";
            String query14 =" SET GLOBAL optimizer_switch='semijoin=on'";
            String query15 =" SET GLOBAL optimizer_switch='loosescan=on'";
            String query16 =" SET GLOBAL optimizer_switch='firstmatch=on'";

            
            ps = conn.prepareStatement(query);
            ps.execute();
            ps.close();
            ps = conn.prepareStatement(query1);
            ps.execute();    
            ps = conn.prepareStatement(query3);
            ps.execute();
            ps = conn.prepareStatement(query4);
            ps.execute();
            ps = conn.prepareStatement(query5);
            ps.execute();
            ps = conn.prepareStatement(query6);
            ps.execute();
            ps = conn.prepareStatement(query7);
            ps.execute();
            ps = conn.prepareStatement(query8);
            ps.execute();
            ps = conn.prepareStatement(query9);
            ps.execute();
            ps = conn.prepareStatement(query10);
            ps.execute();
            
            ps = conn.prepareStatement(query13);
            ps.execute();
            ps = conn.prepareStatement(query14);
            ps.execute();
            ps = conn.prepareStatement(query15);
            ps.execute();
            ps = conn.prepareStatement(query16);
            ps.execute();
                 
    
        } catch (SQLException ex) {
            Logger.getLogger(userApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(userApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(userApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(userApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(userApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea affichageTextArea;
    private javax.swing.JScrollPane detailsjScrollPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton;
    private javax.swing.JTextArea terminalTextArea;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
